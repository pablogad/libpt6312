#pragma once

// char_table.hpp : conversion table from characters to display format
//
// Format: bits for each segment
//
//           -----[BIT 0]-----
//          |      +0x01      |
//          |                 |
//       [BIT 1]+0x02      [BIT 2]+0x04
//          |                 |
//          |                 |
//           -----[BIT 3]-----        Binary data: 76543210b
//          |      +0x08      |
//          |                 |
//       [BIT 4]+0x10      [BIT 5]+0x20
//          |                 |
//          |                 |
//           -----[BIT 6]-----
//                 +0x40
//
//       [BIT 7] always 0

const std::map<char,uint8_t> charToDisplayMap = {
   { ' ', 0 },
   { '0', 0x77 },
   { '1', 0x24 },
   { '2', 0x5D },
   { '3', 0x6D },
   { '4', 0x2E },
   { '5', 0x6B },
   { '6', 0x7B },
   { '7', 0x25 },
   { '8', 0x7F },
   { '9', 0x6F },

   { '_', 0x40 },
   { '-', 0x08 },
   { '=', 0x48 },

   { 'A', 0x3F },  // 00111111
   { 'B', 0x7F },  // 01111111
   { 'C', 0x53 },  // 01010011
   { 'D', 0x77 },  // 
   { 'E', 0x5B },  // 01011011
   { 'F', 0x1B },  // 00011011
   { 'G', 0x73 },  // 01110011
   { 'H', 0x3E },  // 00111110
   { 'I', 0x24 },
   { 'J', 0x64 },
   { 'K', 0x3E },
   { 'L', 0x52 },  // 01010010
   { 'M', 0x37 },  // 00110111
   { 'N', 0x37 },  // 00110111
   { 'O', 0x77 },
   { 'P', 0x1F },  // 00011111
   { 'Q', 0x77 },
   { 'R', 0x3F },
   { 'S', 0x6B },
   { 'T', 0x01 },
   { 'U', 0x76 },  // 01110110
   { 'V', 0x76 },
   { 'W', 0x76 },
   { 'X', 0x3E },
   { 'Y', 0x6E },  // 01101110
   { 'Z', 0x5D },

   { 'a', 0x78 },  // 01111000
   { 'b', 0x7A },  // 01111010
   { 'c', 0x58 },  // 01011000
   { 'd', 0x7C },  // 01111100
   { 'e', 0x58 },
   { 'f', 0x1B },  // 00011011
   { 'g', 0x6F },
   { 'h', 0x3A },  // 00111010
   { 'i', 0x20 },  // 00100000
   { 'j', 0x64 },
   { 'k', 0x3E },
   { 'l', 0x24 },  // 00100100
   { 'm', 0x38 },
   { 'n', 0x38 },  // 00110110
   { 'o', 0x78 },
   { 'p', 0x1F },  // 00011111
   { 'q', 0x2F },
   { 'r', 0x18 },
   { 's', 0x6B },
   { 't', 0x5A },
   { 'u', 0x70 },  // 01110000
   { 'v', 0x70 },
   { 'w', 0x70 },
   { 'x', 0x30 },
   { 'y', 0x6E },  // 01101110
   { 'z', 0x48 }
};
